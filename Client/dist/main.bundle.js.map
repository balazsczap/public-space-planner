{"version":3,"sources":["webpack:///./src/app/network/rest.service.ts","webpack:///./src/app/auth/authentication.service.ts","webpack:///./src/app/configuration/configuration.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/users/login-tester/login-tester.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.less","webpack:///./src/app/users/login-tester/login-tester.component.less","webpack:///./src/app/app.component.html","webpack:///./src/app/users/login-tester/login-tester.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Http, Headers, Response, URLSearchParams} from \"@angular/http\";\nimport {Observable} from \"rxjs\";\nimport 'rxjs/Rx';\nimport { ConfigurationService } from \"../configuration/configuration.service\";\nimport {AuthenticationService} from \"../auth/authentication.service\";\n\n@Injectable()\nexport class RestService<T> {\n\n\n\tprivate headers: Headers;\n\t// private token: string;\n\tprivate tokenProvider: AuthenticationService;\n\n\tconstructor(private _http: Http,\n\t private _config: ConfigurationService\n\t ) {\n\n\t    this.headers = new Headers();\n\t    this.headers.append('Content-Type', 'application/json');\n\t    this.headers.append('Accept', 'application/json');\n\t}\n\n\n\tpublic setTokenProvider = (serv: AuthenticationService):void => {\n\t\tthis.tokenProvider = serv;\n\t}\n\n\tpublic logIn = (us: string, pw: string):Observable<T> =>{\n\n\t\tlet headers = new Headers();\n\n\t\tlet body = new URLSearchParams();\n\t\tbody.set('username', us);\n\t\tbody.set('password', pw);\n\n\t\t\n\t\theaders.append('Content-Type', 'application/x-www-form-urlencoded');\n\n\t\treturn this._http.post(\"/api/auth\", body, {headers:headers})\n\t\t.map(res => {\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch(error=>{\n\t\t\tif(error.status == 400){\n\t\t\t\treturn Observable.of(error);\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn Observable.throw(error.json().error || 'Server error');\n\t\t\t}\n\t\t})\n\n\t}\n\n\n\t/* test functions for demoing that auth works*/\n\n\tpublic getPublic=():Observable<T[]> => {\n\t\tlet headers = new Headers();\n\t\t// if(this.tokenProvider==null){\n\t\t// \treturn Observable.throw('Token not available');\n\t\t// }\n\t\t// headers.append('Authorization', 'Bearer ' + this.tokenProvider.token);\n\n\t\treturn this._http.get(this._config.ApiUrl + \"/test/public\", {headers:headers})\n\t\t\t.map(res=>{console.log(res);return res.json();});\n\t}\n\n\tpublic getUser=():Observable<T[]> => {\n\t\tlet headers = new Headers();\n\n\t\theaders.append('Authorization', 'Bearer ' + this.tokenProvider.token);\n\n\t\treturn this._http.get(this._config.ApiUrl + \"/test/user\", {headers:headers})\n\t\t\t.map(res=>{console.log(res);return res.json();});\n\t}\n\n\tpublic getAdmin=():Observable<T[]> => {\n\t\tlet headers = new Headers();\n\n\t\theaders.append('Authorization', 'Bearer ' + this.tokenProvider.token);\n\n\t\treturn this._http.get(this._config.ApiUrl + \"/test/admin\", {headers:headers})\n\t\t\t.map(res=>{console.log(res);return res.json();});\n\t}\n\n\n\t/* ------------------------------------------- */\n\n\n\tpublic getUserById = (id: number): Observable<T> => {\n\t\tlet headers = new Headers();\n\t\t\n\t\theaders.append('Authorization', 'Bearer ' + this.tokenProvider.token);\n\n\t\treturn this._http.get(this._config.ApiUrl + \"/users/\" + id, {headers: headers})\n\t\t\t.map(res => res.json());\n\t}\n\n\tprivate handleError(error: Response) {\n\t\tconsole.log(\"here\");\n\t\tconsole.log(error.json().error || 'Server error');\n\t    return Observable.of(error.json().error || 'Server error');\n  \t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/network/rest.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map'\nimport { ConfigurationService } from '../configuration/configuration.service';\nimport { RestService } from '../network/rest.service';\nimport {User} from '../models/user.model';\n\n \n@Injectable()\nexport class AuthenticationService {\n    public token: string = \"\";\n    public _userId: number;\n    constructor(private _restService: RestService<any>) {\n        // set token if saved in local storage\n        var currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        console.log(currentUser);\n        _restService.setTokenProvider(this);\n        if(currentUser){\n            this.token = currentUser.token;\n            this._userId = currentUser.id;\n        }\n    }\n \n    // login(username: string, password: string): Observable<boolean> {\n    //     return this.http.post('/api/authenticate', JSON.stringify({ username: username, password: password }))\n    //         .map((response: Response) => {\n    //             // login successful if there's a jwt token in the response\n    //             let token = response.json() && response.json().token;\n    //             if (token) {\n    //                 // set token property\n    //                 this.token = token;\n \n    //                 // store username and jwt token in local storage to keep user logged in between page refreshes\n    //                 localStorage.setItem('currentUser', JSON.stringify({ username: username, token: token }));\n \n    //                 // return true to indicate successful login\n    //                 return true;\n    //             } else {\n    //                 // return false to indicate failed login\n    //                 return false;\n    //             }\n    //         });\n    // }\n    logIn(username: string, password: string): Observable<boolean> {\n\n           // return this._restService.logIn(username,password)\n           //                 .flatMap(res => {\n           //                     if(res.ok!=false){\n           //                         console.log(\"ayy1\");\n\n           //                         console.log(res);\n           //                         return res[\"id\"];\n           //                     }\n           //                     console.log(\"ayy2\");\n           //                     return \"false\";\n           //                 })\n           //                 .flatMap((res:number)=>{\n                               \n           //                     console.log(\"ayy2\");\n           //                     return this._restService.getUserById(res).map(res=> {\n           //                         console.log(\"ayy4\");\n           //                         console.log(res);\n           //                         return false;\n           //                     });\n\n           //                 },\n           //                 (err:string)=>{\n           //                     console.log(\"ayy5\");\n           //                     console.log(err); \n           //                     return false;\n           //                 })\n\n        // return this._restService.logIn(username, password)\n        //                 .map((res:Response) => {\n        //                     console.log(res);\n        //                     if(res.ok !== false){\n        //                         console.log(\"ayy1\");\n        //                         this.token = res[\"access_token\"];\n        //                         return res[\"id\"];\n        //                     }\n        //                     console.log(\"ayy2\");\n        //                 }).mergeMap(\n        //                     (data:number) => {\n        //                         console.log(\"ayy3\");\n        //                         return this._restService.getUserById(data).map(\n        //                             data=>{\n        //                                 this._currentUser = data;\n        //                                 return false;\n        //                         });\n        //                     },\n        //                 );\n        return this._restService.logIn(username, password)\n                    .map((res : Response)=> {\n                        if(res.ok==false){\n                            return false;\n                        }\n                        this.token = res[\"access_token\"];\n                        this._userId = res[\"id\"];\n                        localStorage.setItem('currentUser', JSON.stringify({ id: this._userId, token: this.token }));\n                        return true;\n                    });\n    }\n\n\n    isLoggedIn() : boolean {\n        return this.token ? true : false;\n    }\n\n    // getLoggedIn() : Observable<User>  {\n    //     if(this._currentUser && this._currentUser.id != this._userId){\n    //         return this._restService.getUserById(this._userId).map(data => {\n    //             // var u = new User({id : data[\"id\"], name: data[\"name\"],username: data[\"username\"],role : data[\"role\"]});\n    //             var u = new User();\n\n    //             u.id = data[\"id\"];\n    //             u.name = data[\"name\"];\n    //             u.username = data[\"username\"];\n    //             u.role = data[\"role\"];\n    //             this._currentUser = u;\n    //             return u;\n    //         })\n    //     }\n    //     else if(this._currentUser){\n    //         return Observable.of(null);\n    //     }\n    //     else{\n    //         return Observable.of(this._currentUser);\n    //     }\n    // }\n\n \n    logOut(): void {\n        // clear token remove user from local storage to log user out\n        this.token = null;\n        localStorage.removeItem('currentUser');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/authentication.service.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ConfigurationService {\r\n\tpublic ApiUrl : string = \"/api\";\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/configuration/configuration.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 426;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 426\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export class User{\n\tid: number;\n\tname: string;\n\tusername: string;\n}\nconst USERS: User[] = [\n  { id: 11, name: 'Mr. Nice', username: 'Mr. Nice' },\n  { id: 12, name: 'Narco', username: 'Narco' },\n  { id: 13, name: 'Bombasto', username: 'Bombasto' },\n  { id: 14, name: 'Celeritas', username: 'Celeritas' },\n  { id: 15, name: 'Magneta', username: 'Magneta' },\n  { id: 16, name: 'RubberMan', username: 'RubberMan' },\n  { id: 17, name: 'Dynama', username: 'Dynama' },\n  { id: 18, name: 'Dr IQ', username: 'Dr IQ' },\n  { id: 19, name: 'Magma', username: 'Magma' },\n  { id: 20, name: 'Tornado', username: 'Tornado' }\n];\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\n\n\n\nexport class AppComponent {\n  title = 'app works!';\n  users = USERS;\n  selectedUser : User;\n\n  onSelect(user: User): void{\n  \tthis.selectedUser = user;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import {MaterialModule} from '@angular/material';\nimport {ConfigurationService } from './configuration/configuration.service'\nimport { AuthenticationService } from './auth/authentication.service'\nimport { AppComponent } from './app.component';\nimport { LoginTesterComponent } from './users/login-tester/login-tester.component';\nimport {RestService} from './network/rest.service'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginTesterComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    NgbModule.forRoot()\n    // MaterialModule\n  ],\n  providers: [ConfigurationService, AuthenticationService, RestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../auth/authentication.service';\nimport { RestService } from '../../network/rest.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-login-tester',\n  templateUrl: './login-tester.component.html',\n  styleUrls: ['./login-tester.component.less'],\n  providers: [AuthenticationService]\n})\nexport class LoginTesterComponent implements OnInit {\n\n  _authService: AuthenticationService;\n  _restService: RestService<User>;\n\n  un: string;\n  pw: string;\n\n  publicdata: string;\n  userdata: string;\n  admindata: string;\n\n  user: User = null;\n\n  constructor(private authService: AuthenticationService, private restService: RestService<User>) { \n    this._authService = authService;\n  \tthis._restService = restService;\n    if(this._authService.isLoggedIn())\n      this.getUserData();\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSubmit(){\n  \t// console.log(this.un, this.pw);\n  \tthis._authService.logIn(this.un, this.pw).subscribe(\n  \t\t(success: any) => {\n        console.log(success);\n  \t\t\tif(success) {\n          this.getUserData();\n          // this._authService.getLoggedIn().subscribe(user=> this.user = user);\n          // console.log(\"user logged in\");\n        }\n        else console.log(\"login failed\");\n  \t\t},\n  \t\t(err) => console.log(err)\n  \t);\n    \n  }\n\n  getUserData(){\n    this._restService.getUserById(this._authService._userId).subscribe(user=>this.user=user);\n  }\n\n  logOut(){\n    this._authService.logOut();\n    this.user = null;\n  }\n\n  getPublic(){\n    // this.users = [];\n    this._restService.getPublic().subscribe(\n      (data: any) => {\n        this.publicdata= data.data;\n        // this.users = data;\n      },\n      (err) => this.publicdata = err\n    );\n  }\n  getUser(){\n    // this.users = [];\n    this._restService.getUser().subscribe(\n      (data: any) => {\n        this.userdata = data.data;\n        // this.users = data;\n      },\n      (err) => this.userdata = err\n    );\n  }\n  getAdmin(){\n    // this.users = [];\n    this._restService.getAdmin().subscribe(\n      (data: any) => {\n        this.admindata = data.data;\n        // this.users = data;\n      },\n      (err) => this.admindata = err\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/login-tester/login-tester.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".selected {\\n  background-color: #CFD8DC !important;\\n  color: white;\\n}\\n.users {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 15em;\\n}\\n.users li {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n.users li.selected:hover {\\n  background-color: #BBD8DC !important;\\n  color: white;\\n}\\n.users li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.users .text {\\n  position: relative;\\n  top: -3px;\\n}\\n.users .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.less\n// module id = 595\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/login-tester/login-tester.component.less\n// module id = 596\n// module chunks = 1","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\t\\t<app-login-tester></app-login-tester>\\n<!-- \\t\\t<div class=\\\"col-md-6 col-sm-6\\\">\\n\\t\\t\\t<h2 class=\\\"text-center\\\">Users</h2>\\n\\t\\t\\t<ul class=\\\"users\\\">\\n\\t\\t\\t\\t<li *ngFor=\\\"let user of users\\\" (click)=\\\"onSelect(user)\\\" [class.selected]=\\\"user===selectedUser\\\">\\n\\t\\t\\t\\t\\t<span>{{user.name}}</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\n\\t\\t<div *ngIf=\\\"selectedUser\\\" class=\\\"col-md-6 col-sm-6\\\" >\\n\\t\\t\\t<h2>{{selectedUser.name}}</h2>\\n\\t\\t\\t<div><label>id: </label>{{selectedUser.id}}</div>\\n\\t\\t\\t<div>\\n\\t\\t\\t    <label>name: </label>\\n\\t\\t\\t    <input [(ngModel)]=\\\"selectedUser.name\\\" placeholder=\\\"name\\\"/>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n -->\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 599\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<form class=\\\"col-md-6 col-md-offset-3\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t<h1 class=\\\"text-center\\\">Login</h1>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"username\\\">Username</label>\\n\\t\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"un\\\" class=\\\"form-control\\\" name=\\\"username\\\" required>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\n\\t\\t\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"pw\\\" class=\\\"form-control\\\" name=\\\"password\\\" required>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<input class=\\\"btn btn-primary col-md-2 col-md-offset-3 col-sm-2 col-sm-offset-3\\\" type=\\\"submit\\\" value=\\\"Login\\\">\\n\\t\\t\\t\\t<input class=\\\"btn btn-primary col-md-2 col-md-offset-2 col-sm-2 col-sm-offset-2\\\" type=\\\"button\\\" value=\\\"Logout\\\" (click)=\\\"logOut()\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"user \\\" style=\\\"margin-top:30px; padding:10px; font-size:big; border: 1px solid #333;\\\">\\n\\t\\t\\t\\t<span>Hello {{user.name}}! You are logged in as a(n) {{user.role}}.</span>\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n\\t<div class=\\\"row\\\" style=\\\"margin-top:30px;\\\">\\n\\t\\t<input class=\\\"btn btn-primary \\\" value=\\\"GET Public route\\\" (click)=\\\"getPublic()\\\">\\n\\t\\t<span>{{publicdata}}</span>\\n\\t</div>\\n\\n\\t<div class=\\\"row\\\" style=\\\"margin-top:30px;\\\">\\n\\t\\t<input class=\\\"btn btn-primary \\\" value=\\\"GET User route\\\" (click)=\\\"getUser()\\\">\\n\\t\\t<span>{{userdata}}</span>\\n\\t</div>\\n\\t<div class=\\\"row\\\" style=\\\"margin-top:30px;\\\">\\n\\t\\t<input class=\\\"btn btn-primary \\\" value=\\\"GET Admin route\\\" (click)=\\\"getAdmin()\\\">\\n\\t\\t<span>{{admindata}}</span>\\n\\t</div>\\n<!-- \\t<div class=\\\"row\\\" style=\\\"margin-top:100px;\\\">\\n\\n\\t\\t<table class=\\\"table table-hover\\\">\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<td>ID</td>\\n\\t\\t\\t\\t<td>Name</td>\\n\\t\\t\\t\\t<td>Username</td>\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tr *ngFor=\\\"let user of users\\\">\\n\\t\\t\\t\\t<td>{{user.id}}</td>1\\n\\t\\t\\t\\t<td>{{user.name}}</td>\\n\\t\\t\\t\\t<td>{{user.username}}</td>\\n\\t\\t\\t</tr>\\n\\n\\t\\t</table>\\n\\t</div> -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/login-tester/login-tester.component.html\n// module id = 600\n// module chunks = 1"],"sourceRoot":""}